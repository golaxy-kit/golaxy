/*
 * This file is part of Golaxy Distributed Service Development Framework.
 *
 * Golaxy Distributed Service Development Framework is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 2.1 of the License, or
 * (at your option) any later version.
 *
 * Golaxy Distributed Service Development Framework is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with Golaxy Distributed Service Development Framework. If not, see <http://www.gnu.org/licenses/>.
 *
 * Copyright (c) 2024 pangdogs.
 */

// Code generated by eventc eventtab --name=entityMgrEventTab; DO NOT EDIT.

package runtime

import (
	event "git.golaxy.org/core/event"
)

type IEntityMgrEventTab interface {
	EventEntityMgrAddEntity() event.IEvent
	EventEntityMgrRemoveEntity() event.IEvent
	EventEntityMgrEntityAddComponents() event.IEvent
	EventEntityMgrEntityRemoveComponent() event.IEvent
	EventEntityMgrEntityFirstTouchComponent() event.IEvent
}

var (
	_entityMgrEventTabId = event.DeclareEventTabIdT[entityMgrEventTab]()
	EventEntityMgrAddEntityId = _entityMgrEventTabId + 0
	EventEntityMgrRemoveEntityId = _entityMgrEventTabId + 1
	EventEntityMgrEntityAddComponentsId = _entityMgrEventTabId + 2
	EventEntityMgrEntityRemoveComponentId = _entityMgrEventTabId + 3
	EventEntityMgrEntityFirstTouchComponentId = _entityMgrEventTabId + 4
)

type entityMgrEventTab [5]event.Event

func (eventTab *entityMgrEventTab) Init(autoRecover bool, reportError chan error, recursion event.EventRecursion) {
	(*eventTab)[0].Init(autoRecover, reportError, recursion)
	(*eventTab)[1].Init(autoRecover, reportError, recursion)
	(*eventTab)[2].Init(autoRecover, reportError, recursion)
	(*eventTab)[3].Init(autoRecover, reportError, recursion)
	(*eventTab)[4].Init(autoRecover, reportError, recursion)
}

func (eventTab *entityMgrEventTab) Event(id uint64) event.IEvent {
	if _entityMgrEventTabId != id & 0xFFFFFFFF00000000 {
		return nil
	}
	pos := id & 0xFFFFFFFF
	if pos >= uint64(len(*eventTab)) {
		return nil
	}
	return &(*eventTab)[pos]
}

func (eventTab *entityMgrEventTab) Open() {
	for i := range *eventTab {
		(*eventTab)[i].Open()
	}
}

func (eventTab *entityMgrEventTab) Close() {
	for i := range *eventTab {
		(*eventTab)[i].Close()
	}
}

func (eventTab *entityMgrEventTab) Clean() {
	for i := range *eventTab {
		(*eventTab)[i].Clean()
	}
}

func (eventTab *entityMgrEventTab) EventEntityMgrAddEntity() event.IEvent {
	return &(*eventTab)[0]
}

func (eventTab *entityMgrEventTab) EventEntityMgrRemoveEntity() event.IEvent {
	return &(*eventTab)[1]
}

func (eventTab *entityMgrEventTab) EventEntityMgrEntityAddComponents() event.IEvent {
	return &(*eventTab)[2]
}

func (eventTab *entityMgrEventTab) EventEntityMgrEntityRemoveComponent() event.IEvent {
	return &(*eventTab)[3]
}

func (eventTab *entityMgrEventTab) EventEntityMgrEntityFirstTouchComponent() event.IEvent {
	return &(*eventTab)[4]
}
